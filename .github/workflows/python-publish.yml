name: Lint, Release-based Versioning, and Deploy to PyPI

on:
  release:
    types:
      - published

jobs:
  version-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Update VERSION file from Release Tag
        id: version-update
        run: |
          release_version="${{ github.event.release.tag_name }}"
          if [[ ! $release_version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid release tag format. Expected 'X.Y.Z'."
            exit 1
          fi
          echo "$release_version" > VERSION
          echo "Updated VERSION to $release_version"

      - name: Commit updated VERSION file
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add VERSION
          git commit -m "Update VERSION to ${{ github.event.release.tag_name }}"
          git push

  deploy:
    runs-on: ubuntu-latest
    needs: version-update

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
